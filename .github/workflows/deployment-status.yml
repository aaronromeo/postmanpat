name: Deployment Status

on:
  push:
    branches: [ main ]

permissions:
  statuses: write
  contents: read

jobs:
  deployment-status:
    runs-on: ubuntu-latest
    steps:
    - name: Show deployment tracking info
      run: |
        echo "üîç Tracking deployment status for commit: ${{ github.sha }}"
        echo "This workflow will monitor CI completion and deployment progress"

    - name: Wait for CI workflow to complete
      uses: fountainhead/action-wait-for-check@v1.2.0
      id: wait-for-ci
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        checkName: CI / build
        ref: ${{ github.sha }}
        timeoutSeconds: 1800
        intervalSeconds: 30

    - name: Check CI result
      run: |
        echo "CI workflow completed with result: ${{ steps.wait-for-ci.outputs.conclusion }}"
        if [ "${{ steps.wait-for-ci.outputs.conclusion }}" != "success" ]; then
          echo "‚ùå CI workflow failed - deployment will not proceed"
          exit 1
        fi
        echo "‚úÖ CI workflow succeeded - deployment should proceed"

    - name: Wait for deployment workflow to complete
      run: |
        echo "‚è≥ Waiting for deployment workflow to complete..."
        timeout=1800  # 30 minutes
        interval=30   # Check every 30 seconds
        elapsed=0

        while [ $elapsed -lt $timeout ]; do
          # Get deployment workflow runs for this commit
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?head_sha=${{ github.sha }}")

          # Find deployment workflow run
          deploy_status=$(echo "$response" | jq -r '.workflow_runs[] | select(.name == "Deploy to Dokku") | .conclusion // "null"' | head -1)
          deploy_run_status=$(echo "$response" | jq -r '.workflow_runs[] | select(.name == "Deploy to Dokku") | .status // "null"' | head -1)

          echo "Deployment Status: $deploy_status, Run Status: $deploy_run_status (elapsed: ${elapsed}s)"

          if [ "$deploy_status" = "success" ]; then
            echo "‚úÖ Deployment completed successfully"
            exit 0
          elif [ "$deploy_status" = "failure" ] || [ "$deploy_status" = "cancelled" ]; then
            echo "‚ùå Deployment failed or was cancelled"
            exit 1
          elif [ "$deploy_status" = "null" ] && [ "$deploy_run_status" = "completed" ]; then
            echo "‚ö†Ô∏è Deployment completed but conclusion is null - treating as failure"
            exit 1
          elif [ "$deploy_status" = "null" ] || [ "$deploy_run_status" = "in_progress" ] || [ "$deploy_run_status" = "queued" ]; then
            echo "‚è≥ Deployment still running (status: $deploy_run_status), waiting..."
            sleep $interval
            elapsed=$((elapsed + interval))
          else
            echo "‚ö†Ô∏è Unknown deployment status: $deploy_status, run status: $deploy_run_status"
            sleep $interval
            elapsed=$((elapsed + interval))
          fi
        done

        echo "‚ùå Timeout waiting for deployment to complete"
        exit 1
